{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eipfcvbjk\\\\OneDrive\\\\Desktop\\\\wings-cafe\\\\frontend\\\\src\\\\components\\\\Sales.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Sales({\n  products,\n  refreshProducts,\n  refreshTransactions\n}) {\n  _s();\n  const [selected, setSelected] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const toggleSelect = productId => {\n    setSelected(prev => prev.includes(productId) ? prev.filter(id => id !== productId) : [...prev, productId]);\n  };\n  const handleProcessSale = async () => {\n    if (selected.length === 0) {\n      setMessage(\"Please select at least one product.\");\n      return;\n    }\n    try {\n      for (const id of selected) {\n        const product = products.find(p => p.id === id);\n        if (!product || product.stock <= 0) {\n          setMessage(`Not enough stock for ${(product === null || product === void 0 ? void 0 : product.name) || \"product\"}.`);\n          continue;\n        }\n\n        // Decrease stock\n        await fetch(`http://localhost:3001/products/${id}`, {\n          method: \"PATCH\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            stock: product.stock - 1\n          })\n        });\n\n        // Record transaction\n        await fetch(\"http://localhost:3001/transactions\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            productId: product.id,\n            productName: product.name,\n            type: \"sale\",\n            quantity: 1,\n            date: new Date().toISOString()\n          })\n        });\n      }\n\n      // Refresh state after all updates\n      await refreshProducts();\n      await refreshTransactions();\n      setSelected([]);\n      setMessage(\"Sale processed successfully.\");\n    } catch (error) {\n      console.error(\"Error processing sale:\", error);\n      setMessage(\"Error processing sale.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sales\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Sales\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: products.map(product => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: selected.includes(product.id),\n            onChange: () => toggleSelect(product.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), product.name, \" - Stock: \", product.stock, \" - Price: $\", product.price]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)\n      }, product.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleProcessSale,\n      children: \"Process Sale\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(Sales, \"HDryHlnbuvA4zQGLei9J2dL9JvU=\");\n_c = Sales;\nexport default Sales;\nvar _c;\n$RefreshReg$(_c, \"Sales\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Sales","products","refreshProducts","refreshTransactions","_s","selected","setSelected","message","setMessage","toggleSelect","productId","prev","includes","filter","id","handleProcessSale","length","product","find","p","stock","name","fetch","method","headers","body","JSON","stringify","productName","type","quantity","date","Date","toISOString","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","checked","onChange","price","onClick","_c","$RefreshReg$"],"sources":["C:/Users/eipfcvbjk/OneDrive/Desktop/wings-cafe/frontend/src/components/Sales.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction Sales({ products, refreshProducts, refreshTransactions }) {\r\n  const [selected, setSelected] = useState([]);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const toggleSelect = (productId) => {\r\n    setSelected((prev) =>\r\n      prev.includes(productId) ? prev.filter((id) => id !== productId) : [...prev, productId]\r\n    );\r\n  };\r\n\r\n  const handleProcessSale = async () => {\r\n    if (selected.length === 0) {\r\n      setMessage(\"Please select at least one product.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      for (const id of selected) {\r\n        const product = products.find((p) => p.id === id);\r\n        if (!product || product.stock <= 0) {\r\n          setMessage(`Not enough stock for ${product?.name || \"product\"}.`);\r\n          continue;\r\n        }\r\n\r\n        // Decrease stock\r\n        await fetch(`http://localhost:3001/products/${id}`, {\r\n          method: \"PATCH\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({ stock: product.stock - 1 }),\r\n        });\r\n\r\n        // Record transaction\r\n        await fetch(\"http://localhost:3001/transactions\", {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({\r\n            productId: product.id,\r\n            productName: product.name,\r\n            type: \"sale\",\r\n            quantity: 1,\r\n            date: new Date().toISOString(),\r\n          }),\r\n        });\r\n      }\r\n\r\n      // Refresh state after all updates\r\n      await refreshProducts();\r\n      await refreshTransactions();\r\n\r\n      setSelected([]);\r\n      setMessage(\"Sale processed successfully.\");\r\n    } catch (error) {\r\n      console.error(\"Error processing sale:\", error);\r\n      setMessage(\"Error processing sale.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"sales\">\r\n      <h2>Sales</h2>\r\n      {message && <p>{message}</p>}\r\n\r\n      <ul>\r\n        {products.map((product) => (\r\n          <li key={product.id}>\r\n            <label>\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={selected.includes(product.id)}\r\n                onChange={() => toggleSelect(product.id)}\r\n              />\r\n              {product.name} - Stock: {product.stock} - Price: ${product.price}\r\n            </label>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n      <button onClick={handleProcessSale}>Process Sale</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sales;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}