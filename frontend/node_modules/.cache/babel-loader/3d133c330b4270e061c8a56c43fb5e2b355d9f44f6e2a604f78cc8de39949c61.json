{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eipfcvbjk\\\\OneDrive\\\\Desktop\\\\wings-cafe\\\\frontend\\\\src\\\\components\\\\Sales.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Sales = ({\n  products,\n  setProducts,\n  transactions,\n  setTransactions\n}) => {\n  _s();\n  const [quantities, setQuantities] = useState({}); // { productId: quantity }\n\n  const updateQuantity = (productId, newQuantity) => {\n    if (newQuantity < 0 || isNaN(newQuantity)) return;\n    const product = products.find(p => p.id === productId);\n    if (!product) return;\n    if (newQuantity > product.quantity) {\n      alert(`Only ${product.quantity} units of ${product.name} are available.`);\n      return;\n    }\n    setQuantities(prev => ({\n      ...prev,\n      [productId]: newQuantity\n    }));\n  };\n  const processSale = async () => {\n    const itemsToSell = Object.entries(quantities).filter(([_, qty]) => qty > 0).map(([id, qty]) => {\n      const product = products.find(p => p.id === parseInt(id));\n      return {\n        product,\n        quantity: qty\n      };\n    });\n    if (itemsToSell.length === 0) {\n      alert(\"Please enter quantity for at least one product.\");\n      return;\n    }\n    try {\n      const newTransactions = [];\n\n      // Process all products in one go\n      for (const item of itemsToSell) {\n        const newStock = item.product.quantity - item.quantity;\n\n        // Update product quantity\n        const res = await fetch(`http://localhost:3001/products/${item.product.id}`, {\n          method: \"PATCH\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            quantity: newStock\n          })\n        });\n        const updatedProduct = await res.json();\n\n        // Record transaction\n        const transRes = await fetch(\"http://localhost:3001/transactions\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            productId: item.product.id,\n            type: \"sale\",\n            quantity: item.quantity,\n            unitPrice: item.product.price,\n            totalAmount: item.product.price * item.quantity,\n            date: new Date().toISOString()\n          })\n        });\n        const newTransaction = await transRes.json();\n        newTransactions.push(newTransaction);\n\n        // Update product in state\n        setProducts(prev => prev.map(p => p.id === updatedProduct.id ? updatedProduct : p));\n      }\n\n      // Add all new transactions to state at once\n      setTransactions(prev => [...prev, ...newTransactions]);\n\n      // Reset quantities\n      setQuantities({});\n      alert(\"Sale processed successfully!\");\n    } catch (error) {\n      console.error(\"Error processing sale:\", error);\n      alert(\"Error processing sale. Please try again.\");\n    }\n  };\n  const getSubtotal = () => Object.entries(quantities).reduce((sum, [id, qty]) => {\n    const product = products.find(p => p.id === parseInt(id));\n    return sum + ((product === null || product === void 0 ? void 0 : product.price) || 0) * qty;\n  }, 0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Sales\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Enter Quantities\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Product\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Price (M)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Stock\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Quantity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Subtotal (M)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: products.map(product => {\n            const qty = quantities[product.id] || 0;\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: product.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"M\", product.price.toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: product.quantity\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  min: \"0\",\n                  max: product.quantity,\n                  value: qty,\n                  onChange: e => updateQuantity(product.id, parseInt(e.target.value) || 0),\n                  style: {\n                    width: \"60px\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: qty > 0 ? \"M\" + (product.price * qty).toFixed(2) : \"-\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 19\n              }, this)]\n            }, product.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), Object.values(quantities).some(q => q > 0) && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Sale Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Product\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Price (M)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Quantity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Subtotal (M)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: Object.entries(quantities).filter(([_, qty]) => qty > 0).map(([id, qty]) => {\n            const product = products.find(p => p.id === parseInt(id));\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: product.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"M\", product.price.toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: qty\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"M\", (product.price * qty).toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 23\n              }, this)]\n            }, id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 21\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tfoot\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: \"3\",\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Total\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [\"M\", getSubtotal().toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success\",\n        onClick: processSale,\n        children: \"Process Sale\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-secondary\",\n        style: {\n          marginLeft: \"10px\"\n        },\n        onClick: () => setQuantities({}),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n_s(Sales, \"/1j7rNgJjW382DkSnhNu8gymXhY=\");\n_c = Sales;\nexport default Sales;\nvar _c;\n$RefreshReg$(_c, \"Sales\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Sales","products","setProducts","transactions","setTransactions","_s","quantities","setQuantities","updateQuantity","productId","newQuantity","isNaN","product","find","p","id","quantity","alert","name","prev","processSale","itemsToSell","Object","entries","filter","_","qty","map","parseInt","length","newTransactions","item","newStock","res","fetch","method","headers","body","JSON","stringify","updatedProduct","json","transRes","type","unitPrice","price","totalAmount","date","Date","toISOString","newTransaction","push","error","console","getSubtotal","reduce","sum","children","fileName","_jsxFileName","lineNumber","columnNumber","className","toFixed","min","max","value","onChange","e","target","style","width","values","some","q","colSpan","onClick","marginLeft","_c","$RefreshReg$"],"sources":["C:/Users/eipfcvbjk/OneDrive/Desktop/wings-cafe/frontend/src/components/Sales.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst Sales = ({ products, setProducts, transactions, setTransactions }) => {\r\n  const [quantities, setQuantities] = useState({}); // { productId: quantity }\r\n\r\n  const updateQuantity = (productId, newQuantity) => {\r\n    if (newQuantity < 0 || isNaN(newQuantity)) return;\r\n\r\n    const product = products.find((p) => p.id === productId);\r\n    if (!product) return;\r\n\r\n    if (newQuantity > product.quantity) {\r\n      alert(`Only ${product.quantity} units of ${product.name} are available.`);\r\n      return;\r\n    }\r\n\r\n    setQuantities((prev) => ({ ...prev, [productId]: newQuantity }));\r\n  };\r\n\r\n  const processSale = async () => {\r\n    const itemsToSell = Object.entries(quantities)\r\n      .filter(([_, qty]) => qty > 0)\r\n      .map(([id, qty]) => {\r\n        const product = products.find((p) => p.id === parseInt(id));\r\n        return { product, quantity: qty };\r\n      });\r\n\r\n    if (itemsToSell.length === 0) {\r\n      alert(\"Please enter quantity for at least one product.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const newTransactions = [];\r\n\r\n      // Process all products in one go\r\n      for (const item of itemsToSell) {\r\n        const newStock = item.product.quantity - item.quantity;\r\n\r\n        // Update product quantity\r\n        const res = await fetch(`http://localhost:3001/products/${item.product.id}`, {\r\n          method: \"PATCH\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({ quantity: newStock }),\r\n        });\r\n        const updatedProduct = await res.json();\r\n\r\n        // Record transaction\r\n        const transRes = await fetch(\"http://localhost:3001/transactions\", {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({\r\n            productId: item.product.id,\r\n            type: \"sale\",\r\n            quantity: item.quantity,\r\n            unitPrice: item.product.price,\r\n            totalAmount: item.product.price * item.quantity,\r\n            date: new Date().toISOString(),\r\n          }),\r\n        });\r\n        const newTransaction = await transRes.json();\r\n        newTransactions.push(newTransaction);\r\n\r\n        // Update product in state\r\n        setProducts((prev) =>\r\n          prev.map((p) => (p.id === updatedProduct.id ? updatedProduct : p))\r\n        );\r\n      }\r\n\r\n      // Add all new transactions to state at once\r\n      setTransactions((prev) => [...prev, ...newTransactions]);\r\n\r\n      // Reset quantities\r\n      setQuantities({});\r\n      alert(\"Sale processed successfully!\");\r\n    } catch (error) {\r\n      console.error(\"Error processing sale:\", error);\r\n      alert(\"Error processing sale. Please try again.\");\r\n    }\r\n  };\r\n\r\n  const getSubtotal = () =>\r\n    Object.entries(quantities).reduce((sum, [id, qty]) => {\r\n      const product = products.find((p) => p.id === parseInt(id));\r\n      return sum + (product?.price || 0) * qty;\r\n    }, 0);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Sales</h2>\r\n\r\n      <div className=\"card\">\r\n        <h3>Enter Quantities</h3>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Product</th>\r\n              <th>Price (M)</th>\r\n              <th>Stock</th>\r\n              <th>Quantity</th>\r\n              <th>Subtotal (M)</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {products.map((product) => {\r\n              const qty = quantities[product.id] || 0;\r\n              return (\r\n                <tr key={product.id}>\r\n                  <td>{product.name}</td>\r\n                  <td>M{product.price.toFixed(2)}</td>\r\n                  <td>{product.quantity}</td>\r\n                  <td>\r\n                    <input\r\n                      type=\"number\"\r\n                      min=\"0\"\r\n                      max={product.quantity}\r\n                      value={qty}\r\n                      onChange={(e) =>\r\n                        updateQuantity(product.id, parseInt(e.target.value) || 0)\r\n                      }\r\n                      style={{ width: \"60px\" }}\r\n                    />\r\n                  </td>\r\n                  <td>{qty > 0 ? \"M\" + (product.price * qty).toFixed(2) : \"-\"}</td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      {Object.values(quantities).some((q) => q > 0) && (\r\n        <div className=\"card\">\r\n          <h3>Sale Summary</h3>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Product</th>\r\n                <th>Price (M)</th>\r\n                <th>Quantity</th>\r\n                <th>Subtotal (M)</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {Object.entries(quantities)\r\n                .filter(([_, qty]) => qty > 0)\r\n                .map(([id, qty]) => {\r\n                  const product = products.find((p) => p.id === parseInt(id));\r\n                  return (\r\n                    <tr key={id}>\r\n                      <td>{product.name}</td>\r\n                      <td>M{product.price.toFixed(2)}</td>\r\n                      <td>{qty}</td>\r\n                      <td>M{(product.price * qty).toFixed(2)}</td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n            </tbody>\r\n            <tfoot>\r\n              <tr>\r\n                <td colSpan=\"3\"><strong>Total</strong></td>\r\n                <td><strong>M{getSubtotal().toFixed(2)}</strong></td>\r\n              </tr>\r\n            </tfoot>\r\n          </table>\r\n\r\n          <button className=\"btn btn-success\" onClick={processSale}>Process Sale</button>\r\n          <button\r\n            className=\"btn btn-secondary\"\r\n            style={{ marginLeft: \"10px\" }}\r\n            onClick={() => setQuantities({})}\r\n          >\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sales;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}