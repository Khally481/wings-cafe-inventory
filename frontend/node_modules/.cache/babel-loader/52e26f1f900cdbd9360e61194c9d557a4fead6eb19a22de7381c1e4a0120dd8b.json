{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eipfcvbjk\\\\OneDrive\\\\Desktop\\\\wings-cafe\\\\frontend\\\\src\\\\components\\\\Sales.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Sales = ({\n  products,\n  refreshProducts,\n  refreshTransactions\n}) => {\n  _s();\n  const [quantities, setQuantities] = useState({});\n  const updateQuantity = (productId, newQuantity) => {\n    if (newQuantity < 0 || isNaN(newQuantity)) return;\n    const product = products.find(p => p.id === productId);\n    if (!product) return;\n    if (newQuantity > product.quantity) {\n      alert(`Only ${product.quantity} units of ${product.name} are available.`);\n      return;\n    }\n    setQuantities(prev => ({\n      ...prev,\n      [productId]: newQuantity\n    }));\n  };\n  const processSale = async () => {\n    const itemsToSell = Object.keys(quantities).filter(id => quantities[id] > 0).map(id => {\n      const product = products.find(p => p.id === parseInt(id));\n      return {\n        productId: product.id,\n        name: product.name,\n        price: product.price,\n        quantity: quantities[id]\n      };\n    });\n    if (itemsToSell.length === 0) {\n      alert(\"Please enter quantity for at least one product.\");\n      return;\n    }\n    try {\n      // Process all updates in a single transaction for better performance\n      const updatePromises = itemsToSell.map(async item => {\n        const product = products.find(p => p.id === item.productId);\n        const newQuantity = product.quantity - item.quantity;\n\n        // Update product stock\n        await fetch(`http://localhost:3001/products/${product.id}`, {\n          method: \"PATCH\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            quantity: newQuantity\n          })\n        });\n\n        // Record transaction\n        await fetch(\"http://localhost:3001/transactions\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            productId: product.id,\n            type: \"sale\",\n            quantity: item.quantity,\n            unitPrice: product.price,\n            totalAmount: item.quantity * product.price,\n            date: new Date().toISOString()\n          })\n        });\n      });\n      await Promise.all(updatePromises);\n      setQuantities({});\n      refreshProducts();\n      refreshTransactions();\n      alert(\"Sale processed successfully!\");\n    } catch (error) {\n      console.error(\"Error processing sale:\", error);\n      alert(\"Error processing sale. Please try again.\");\n    }\n  };\n  const getSubtotal = () => Object.keys(quantities).reduce((total, id) => {\n    const product = products.find(p => p.id === parseInt(id));\n    return total + product.price * (quantities[id] || 0);\n  }, 0);\n\n  // Filter out products with zero stock for better UX\n  const availableProducts = products.filter(product => product.quantity > 0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Sales\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Select Products to Sell\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), availableProducts.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No products available for sale.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Product\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Price (M)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Stock\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Quantity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Subtotal (M)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: availableProducts.map(product => {\n            const qty = quantities[product.id] || 0;\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: product.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"M\", product.price.toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: product.quantity\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  value: qty,\n                  min: \"0\",\n                  max: product.quantity,\n                  onChange: e => updateQuantity(product.id, parseInt(e.target.value) || 0),\n                  style: {\n                    width: \"60px\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-sm btn-primary\",\n                  style: {\n                    marginLeft: \"5px\"\n                  },\n                  onClick: () => updateQuantity(product.id, 1),\n                  disabled: product.quantity === 0,\n                  children: \"Add\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: qty > 0 ? \"M\" + (product.price * qty).toFixed(2) : \"-\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 21\n              }, this)]\n            }, product.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), Object.values(quantities).some(q => q > 0) && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Sale Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Product\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Price (M)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Quantity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Subtotal (M)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: Object.keys(quantities).filter(id => quantities[id] > 0).map(id => {\n            const product = products.find(p => p.id === parseInt(id));\n            const qty = quantities[id];\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: product.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"M\", product.price.toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: qty\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"M\", (product.price * qty).toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-sm btn-danger\",\n                  onClick: () => updateQuantity(parseInt(id), 0),\n                  children: \"Remove\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 23\n              }, this)]\n            }, id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 21\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tfoot\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: \"3\",\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Total\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [\"M\", getSubtotal().toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success\",\n        onClick: processSale,\n        children: \"Process Sale\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-secondary\",\n        style: {\n          marginLeft: \"10px\"\n        },\n        onClick: () => setQuantities({}),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n_s(Sales, \"/1j7rNgJjW382DkSnhNu8gymXhY=\");\n_c = Sales;\nexport default Sales;\nvar _c;\n$RefreshReg$(_c, \"Sales\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Sales","products","refreshProducts","refreshTransactions","_s","quantities","setQuantities","updateQuantity","productId","newQuantity","isNaN","product","find","p","id","quantity","alert","name","prev","processSale","itemsToSell","Object","keys","filter","map","parseInt","price","length","updatePromises","item","fetch","method","headers","body","JSON","stringify","type","unitPrice","totalAmount","date","Date","toISOString","Promise","all","error","console","getSubtotal","reduce","total","availableProducts","children","fileName","_jsxFileName","lineNumber","columnNumber","className","qty","toFixed","value","min","max","onChange","e","target","style","width","marginLeft","onClick","disabled","values","some","q","colSpan","_c","$RefreshReg$"],"sources":["C:/Users/eipfcvbjk/OneDrive/Desktop/wings-cafe/frontend/src/components/Sales.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst Sales = ({ products, refreshProducts, refreshTransactions }) => {\r\n  const [quantities, setQuantities] = useState({});\r\n\r\n  const updateQuantity = (productId, newQuantity) => {\r\n    if (newQuantity < 0 || isNaN(newQuantity)) return;\r\n    const product = products.find((p) => p.id === productId);\r\n    if (!product) return;\r\n\r\n    if (newQuantity > product.quantity) {\r\n      alert(`Only ${product.quantity} units of ${product.name} are available.`);\r\n      return;\r\n    }\r\n\r\n    setQuantities((prev) => ({\r\n      ...prev,\r\n      [productId]: newQuantity,\r\n    }));\r\n  };\r\n\r\n  const processSale = async () => {\r\n    const itemsToSell = Object.keys(quantities)\r\n      .filter((id) => quantities[id] > 0)\r\n      .map((id) => {\r\n        const product = products.find((p) => p.id === parseInt(id));\r\n        return {\r\n          productId: product.id,\r\n          name: product.name,\r\n          price: product.price,\r\n          quantity: quantities[id],\r\n        };\r\n      });\r\n\r\n    if (itemsToSell.length === 0) {\r\n      alert(\"Please enter quantity for at least one product.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Process all updates in a single transaction for better performance\r\n      const updatePromises = itemsToSell.map(async (item) => {\r\n        const product = products.find((p) => p.id === item.productId);\r\n        const newQuantity = product.quantity - item.quantity;\r\n\r\n        // Update product stock\r\n        await fetch(`http://localhost:3001/products/${product.id}`, {\r\n          method: \"PATCH\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({ quantity: newQuantity }),\r\n        });\r\n\r\n        // Record transaction\r\n        await fetch(\"http://localhost:3001/transactions\", {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({\r\n            productId: product.id,\r\n            type: \"sale\",\r\n            quantity: item.quantity,\r\n            unitPrice: product.price,\r\n            totalAmount: item.quantity * product.price,\r\n            date: new Date().toISOString(),\r\n          }),\r\n        });\r\n      });\r\n\r\n      await Promise.all(updatePromises);\r\n      \r\n      setQuantities({});\r\n      refreshProducts();\r\n      refreshTransactions();\r\n      alert(\"Sale processed successfully!\");\r\n    } catch (error) {\r\n      console.error(\"Error processing sale:\", error);\r\n      alert(\"Error processing sale. Please try again.\");\r\n    }\r\n  };\r\n\r\n  const getSubtotal = () =>\r\n    Object.keys(quantities).reduce((total, id) => {\r\n      const product = products.find((p) => p.id === parseInt(id));\r\n      return total + product.price * (quantities[id] || 0);\r\n    }, 0);\r\n\r\n  // Filter out products with zero stock for better UX\r\n  const availableProducts = products.filter(product => product.quantity > 0);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Sales</h2>\r\n\r\n      {/* Product list for selection */}\r\n      <div className=\"card\">\r\n        <h3>Select Products to Sell</h3>\r\n        {availableProducts.length === 0 ? (\r\n          <p>No products available for sale.</p>\r\n        ) : (\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Product</th>\r\n                <th>Price (M)</th>\r\n                <th>Stock</th>\r\n                <th>Quantity</th>\r\n                <th>Subtotal (M)</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {availableProducts.map((product) => {\r\n                const qty = quantities[product.id] || 0;\r\n                return (\r\n                  <tr key={product.id}>\r\n                    <td>{product.name}</td>\r\n                    <td>M{product.price.toFixed(2)}</td>\r\n                    <td>{product.quantity}</td>\r\n                    <td>\r\n                      <input\r\n                        type=\"number\"\r\n                        value={qty}\r\n                        min=\"0\"\r\n                        max={product.quantity}\r\n                        onChange={(e) =>\r\n                          updateQuantity(product.id, parseInt(e.target.value) || 0)\r\n                        }\r\n                        style={{ width: \"60px\" }}\r\n                      />\r\n                      <button \r\n                        className=\"btn btn-sm btn-primary\"\r\n                        style={{ marginLeft: \"5px\" }}\r\n                        onClick={() => updateQuantity(product.id, 1)}\r\n                        disabled={product.quantity === 0}\r\n                      >\r\n                        Add\r\n                      </button>\r\n                    </td>\r\n                    <td>{qty > 0 ? \"M\" + (product.price * qty).toFixed(2) : \"-\"}</td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        )}\r\n      </div>\r\n\r\n      {/* Sale summary */}\r\n      {Object.values(quantities).some((q) => q > 0) && (\r\n        <div className=\"card\">\r\n          <h3>Sale Summary</h3>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Product</th>\r\n                <th>Price (M)</th>\r\n                <th>Quantity</th>\r\n                <th>Subtotal (M)</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {Object.keys(quantities)\r\n                .filter((id) => quantities[id] > 0)\r\n                .map((id) => {\r\n                  const product = products.find((p) => p.id === parseInt(id));\r\n                  const qty = quantities[id];\r\n                  return (\r\n                    <tr key={id}>\r\n                      <td>{product.name}</td>\r\n                      <td>M{product.price.toFixed(2)}</td>\r\n                      <td>{qty}</td>\r\n                      <td>M{(product.price * qty).toFixed(2)}</td>\r\n                      <td>\r\n                        <button \r\n                          className=\"btn btn-sm btn-danger\"\r\n                          onClick={() => updateQuantity(parseInt(id), 0)}\r\n                        >\r\n                          Remove\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n            </tbody>\r\n            <tfoot>\r\n              <tr>\r\n                <td colSpan=\"3\">\r\n                  <strong>Total</strong>\r\n                </td>\r\n                <td>\r\n                  <strong>M{getSubtotal().toFixed(2)}</strong>\r\n                </td>\r\n                <td></td>\r\n              </tr>\r\n            </tfoot>\r\n          </table>\r\n          <button className=\"btn btn-success\" onClick={processSale}>\r\n            Process Sale\r\n          </button>\r\n          <button\r\n            className=\"btn btn-secondary\"\r\n            style={{ marginLeft: \"10px\" }}\r\n            onClick={() => setQuantities({})}\r\n          >\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sales;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}