{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eipfcvbjk\\\\OneDrive\\\\Desktop\\\\wings-cafe\\\\frontend\\\\src\\\\components\\\\Sales.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Sales = ({\n  products,\n  setProducts,\n  transactions,\n  setTransactions\n}) => {\n  _s();\n  const [selectedProducts, setSelectedProducts] = useState({}); // { productId: quantity }\n\n  const toggleSelection = productId => {\n    setSelectedProducts(prev => {\n      if (prev[productId]) {\n        const {\n          [productId]: _,\n          ...rest\n        } = prev;\n        return rest;\n      } else {\n        return {\n          ...prev,\n          [productId]: 1\n        };\n      }\n    });\n  };\n  const updateQuantity = (productId, qty) => {\n    const product = products.find(p => p.id === productId);\n    if (!product || qty < 0 || qty > product.quantity || isNaN(qty)) return;\n    setSelectedProducts(prev => ({\n      ...prev,\n      [productId]: qty\n    }));\n  };\n  const processSale = async () => {\n    const itemsToSell = Object.entries(selectedProducts).filter(([_, qty]) => qty > 0).map(([id, qty]) => {\n      const product = products.find(p => p.id === parseInt(id));\n      return {\n        product,\n        quantity: qty\n      };\n    });\n    if (!itemsToSell.length) {\n      alert(\"Please select at least one product and enter a valid quantity.\");\n      return;\n    }\n    try {\n      // Process all sales in parallel\n      const updatedProducts = [...products];\n      const newTransactions = [];\n      await Promise.all(itemsToSell.map(async ({\n        product,\n        quantity\n      }) => {\n        const newStock = product.quantity - quantity;\n\n        // Update product quantity\n        await fetch(`http://localhost:3001/products/${product.id}`, {\n          method: \"PATCH\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            quantity: newStock\n          })\n        });\n\n        // Record transaction\n        const transRes = await fetch(\"http://localhost:3001/transactions\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            productId: product.id,\n            type: \"sale\",\n            quantity,\n            unitPrice: product.price,\n            totalAmount: product.price * quantity,\n            date: new Date().toISOString()\n          })\n        });\n        const newTransaction = await transRes.json();\n        newTransactions.push(newTransaction);\n\n        // Update local product state\n        const index = updatedProducts.findIndex(p => p.id === product.id);\n        if (index !== -1) updatedProducts[index].quantity = newStock;\n      }));\n      setProducts(updatedProducts);\n      setTransactions(prev => [...prev, ...newTransactions]);\n      setSelectedProducts({});\n      alert(\"Sale processed successfully!\");\n    } catch (err) {\n      console.error(\"Error processing sale:\", err);\n      alert(\"Error processing sale. Please try again.\");\n    }\n  };\n  const getSubtotal = () => Object.entries(selectedProducts).reduce((sum, [id, qty]) => {\n    const product = products.find(p => p.id === parseInt(id));\n    return sum + ((product === null || product === void 0 ? void 0 : product.price) || 0) * qty;\n  }, 0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Sales\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Select Products\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Select\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Product\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Price (M)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Stock\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Quantity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Subtotal (M)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: products.map(product => {\n            const qty = selectedProducts[product.id] || 0;\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: !!selectedProducts[product.id],\n                  onChange: () => toggleSelection(product.id),\n                  disabled: product.quantity === 0\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: product.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"M\", product.price.toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: product.quantity\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  min: \"1\",\n                  max: product.quantity,\n                  value: qty,\n                  onChange: e => updateQuantity(product.id, parseInt(e.target.value) || 0),\n                  disabled: !selectedProducts[product.id],\n                  style: {\n                    width: \"60px\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: qty > 0 ? \"M\" + (product.price * qty).toFixed(2) : \"-\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 19\n              }, this)]\n            }, product.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), Object.keys(selectedProducts).length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Sale Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Product\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Price (M)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Quantity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Subtotal (M)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: Object.entries(selectedProducts).filter(([_, qty]) => qty > 0).map(([id, qty]) => {\n            const product = products.find(p => p.id === parseInt(id));\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: product.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"M\", product.price.toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: qty\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"M\", (product.price * qty).toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 23\n              }, this)]\n            }, id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 21\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tfoot\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: \"3\",\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Total\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [\"M\", getSubtotal().toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success\",\n        onClick: processSale,\n        children: \"Process Sale\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-secondary\",\n        style: {\n          marginLeft: \"10px\"\n        },\n        onClick: () => setSelectedProducts({}),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s(Sales, \"Sk3c5p69eeO3emmYX1jsTk0lZIM=\");\n_c = Sales;\nexport default Sales;\nvar _c;\n$RefreshReg$(_c, \"Sales\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Sales","products","setProducts","transactions","setTransactions","_s","selectedProducts","setSelectedProducts","toggleSelection","productId","prev","_","rest","updateQuantity","qty","product","find","p","id","quantity","isNaN","processSale","itemsToSell","Object","entries","filter","map","parseInt","length","alert","updatedProducts","newTransactions","Promise","all","newStock","fetch","method","headers","body","JSON","stringify","transRes","type","unitPrice","price","totalAmount","date","Date","toISOString","newTransaction","json","push","index","findIndex","err","console","error","getSubtotal","reduce","sum","children","fileName","_jsxFileName","lineNumber","columnNumber","className","checked","onChange","disabled","name","toFixed","min","max","value","e","target","style","width","keys","colSpan","onClick","marginLeft","_c","$RefreshReg$"],"sources":["C:/Users/eipfcvbjk/OneDrive/Desktop/wings-cafe/frontend/src/components/Sales.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst Sales = ({ products, setProducts, transactions, setTransactions }) => {\r\n  const [selectedProducts, setSelectedProducts] = useState({}); // { productId: quantity }\r\n\r\n  const toggleSelection = (productId) => {\r\n    setSelectedProducts((prev) => {\r\n      if (prev[productId]) {\r\n        const { [productId]: _, ...rest } = prev;\r\n        return rest;\r\n      } else {\r\n        return { ...prev, [productId]: 1 };\r\n      }\r\n    });\r\n  };\r\n\r\n  const updateQuantity = (productId, qty) => {\r\n    const product = products.find((p) => p.id === productId);\r\n    if (!product || qty < 0 || qty > product.quantity || isNaN(qty)) return;\r\n    setSelectedProducts((prev) => ({ ...prev, [productId]: qty }));\r\n  };\r\n\r\n  const processSale = async () => {\r\n    const itemsToSell = Object.entries(selectedProducts)\r\n      .filter(([_, qty]) => qty > 0)\r\n      .map(([id, qty]) => {\r\n        const product = products.find((p) => p.id === parseInt(id));\r\n        return { product, quantity: qty };\r\n      });\r\n\r\n    if (!itemsToSell.length) {\r\n      alert(\"Please select at least one product and enter a valid quantity.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Process all sales in parallel\r\n      const updatedProducts = [...products];\r\n      const newTransactions = [];\r\n\r\n      await Promise.all(\r\n        itemsToSell.map(async ({ product, quantity }) => {\r\n          const newStock = product.quantity - quantity;\r\n\r\n          // Update product quantity\r\n          await fetch(`http://localhost:3001/products/${product.id}`, {\r\n            method: \"PATCH\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({ quantity: newStock }),\r\n          });\r\n\r\n          // Record transaction\r\n          const transRes = await fetch(\"http://localhost:3001/transactions\", {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({\r\n              productId: product.id,\r\n              type: \"sale\",\r\n              quantity,\r\n              unitPrice: product.price,\r\n              totalAmount: product.price * quantity,\r\n              date: new Date().toISOString(),\r\n            }),\r\n          });\r\n\r\n          const newTransaction = await transRes.json();\r\n          newTransactions.push(newTransaction);\r\n\r\n          // Update local product state\r\n          const index = updatedProducts.findIndex((p) => p.id === product.id);\r\n          if (index !== -1) updatedProducts[index].quantity = newStock;\r\n        })\r\n      );\r\n\r\n      setProducts(updatedProducts);\r\n      setTransactions((prev) => [...prev, ...newTransactions]);\r\n      setSelectedProducts({});\r\n      alert(\"Sale processed successfully!\");\r\n    } catch (err) {\r\n      console.error(\"Error processing sale:\", err);\r\n      alert(\"Error processing sale. Please try again.\");\r\n    }\r\n  };\r\n\r\n  const getSubtotal = () =>\r\n    Object.entries(selectedProducts).reduce((sum, [id, qty]) => {\r\n      const product = products.find((p) => p.id === parseInt(id));\r\n      return sum + (product?.price || 0) * qty;\r\n    }, 0);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Sales</h2>\r\n\r\n      <div className=\"card\">\r\n        <h3>Select Products</h3>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Select</th>\r\n              <th>Product</th>\r\n              <th>Price (M)</th>\r\n              <th>Stock</th>\r\n              <th>Quantity</th>\r\n              <th>Subtotal (M)</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {products.map((product) => {\r\n              const qty = selectedProducts[product.id] || 0;\r\n              return (\r\n                <tr key={product.id}>\r\n                  <td>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={!!selectedProducts[product.id]}\r\n                      onChange={() => toggleSelection(product.id)}\r\n                      disabled={product.quantity === 0}\r\n                    />\r\n                  </td>\r\n                  <td>{product.name}</td>\r\n                  <td>M{product.price.toFixed(2)}</td>\r\n                  <td>{product.quantity}</td>\r\n                  <td>\r\n                    <input\r\n                      type=\"number\"\r\n                      min=\"1\"\r\n                      max={product.quantity}\r\n                      value={qty}\r\n                      onChange={(e) =>\r\n                        updateQuantity(product.id, parseInt(e.target.value) || 0)\r\n                      }\r\n                      disabled={!selectedProducts[product.id]}\r\n                      style={{ width: \"60px\" }}\r\n                    />\r\n                  </td>\r\n                  <td>{qty > 0 ? \"M\" + (product.price * qty).toFixed(2) : \"-\"}</td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      {Object.keys(selectedProducts).length > 0 && (\r\n        <div className=\"card\">\r\n          <h3>Sale Summary</h3>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Product</th>\r\n                <th>Price (M)</th>\r\n                <th>Quantity</th>\r\n                <th>Subtotal (M)</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {Object.entries(selectedProducts)\r\n                .filter(([_, qty]) => qty > 0)\r\n                .map(([id, qty]) => {\r\n                  const product = products.find((p) => p.id === parseInt(id));\r\n                  return (\r\n                    <tr key={id}>\r\n                      <td>{product.name}</td>\r\n                      <td>M{product.price.toFixed(2)}</td>\r\n                      <td>{qty}</td>\r\n                      <td>M{(product.price * qty).toFixed(2)}</td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n            </tbody>\r\n            <tfoot>\r\n              <tr>\r\n                <td colSpan=\"3\"><strong>Total</strong></td>\r\n                <td><strong>M{getSubtotal().toFixed(2)}</strong></td>\r\n              </tr>\r\n            </tfoot>\r\n          </table>\r\n\r\n          <button className=\"btn btn-success\" onClick={processSale}>\r\n            Process Sale\r\n          </button>\r\n          <button\r\n            className=\"btn btn-secondary\"\r\n            style={{ marginLeft: \"10px\" }}\r\n            onClick={() => setSelectedProducts({})}\r\n          >\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sales;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}