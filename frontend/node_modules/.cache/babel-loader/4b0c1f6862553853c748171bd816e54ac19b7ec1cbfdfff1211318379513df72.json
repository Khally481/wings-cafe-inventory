{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eipfcvbjk\\\\OneDrive\\\\Desktop\\\\wings-cafe\\\\frontend\\\\src\\\\components\\\\Sales.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Sales = ({\n  products,\n  setProducts,\n  transactions,\n  setTransactions\n}) => {\n  _s();\n  const [selectedProducts, setSelectedProducts] = useState({});\n  const [processing, setProcessing] = useState(false);\n\n  // Toggle selection of a product\n  const toggleSelection = productId => {\n    setSelectedProducts(prev => {\n      if (prev[productId]) {\n        const {\n          [productId]: _,\n          ...rest\n        } = prev;\n        return rest;\n      } else {\n        return {\n          ...prev,\n          [productId]: 1\n        };\n      }\n    });\n  };\n\n  // Update quantity for a selected product\n  const updateQuantity = (productId, qty) => {\n    if (qty < 0 || isNaN(qty)) return;\n    const product = products.find(p => p.id === parseInt(productId));\n    if (!product) return;\n    if (qty > product.quantity) {\n      alert(`Only ${product.quantity} units of ${product.name} are available.`);\n      return;\n    }\n    setSelectedProducts(prev => ({\n      ...prev,\n      [productId]: qty\n    }));\n  };\n  const processSale = async () => {\n    if (processing) return;\n    setProcessing(true);\n    const itemsToSell = Object.entries(selectedProducts).filter(([_, qty]) => qty > 0).map(([id, qty]) => {\n      const product = products.find(p => p.id === parseInt(id));\n      return {\n        product,\n        quantity: qty\n      };\n    });\n    if (itemsToSell.length === 0) {\n      alert(\"Please select at least one product and enter a valid quantity.\");\n      setProcessing(false);\n      return;\n    }\n    try {\n      const updatedProducts = [];\n      const newTransactions = [];\n      for (const item of itemsToSell) {\n        const newStock = item.product.quantity - item.quantity;\n\n        // Update product\n        const res = await fetch(`http://localhost:3001/products/${item.product.id}`, {\n          method: \"PATCH\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            quantity: newStock\n          })\n        });\n        if (!res.ok) throw new Error(`Failed to update product ${item.product.name}`);\n        const updatedProduct = await res.json();\n        updatedProducts.push(updatedProduct);\n\n        // Record transaction\n        const transRes = await fetch(\"http://localhost:3001/transactions\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            productId: item.product.id,\n            type: \"sale\",\n            quantity: item.quantity,\n            unitPrice: item.product.price,\n            totalAmount: item.product.price * item.quantity,\n            date: new Date().toISOString()\n          })\n        });\n        if (!transRes.ok) throw new Error(`Failed to create transaction for ${item.product.name}`);\n        const newTransaction = await transRes.json();\n        newTransactions.push(newTransaction);\n      }\n\n      // Update state only once after all API calls are successful\n      setProducts(prev => prev.map(p => {\n        const updated = updatedProducts.find(up => up.id === p.id);\n        return updated ? updated : p;\n      }));\n      setTransactions(prev => [...prev, ...newTransactions]);\n      setSelectedProducts({});\n      alert(\"Sale processed successfully!\");\n    } catch (error) {\n      console.error(\"Error processing sale:\", error);\n      alert(`Error processing sale: ${error.message}`);\n    } finally {\n      setProcessing(false);\n    }\n  };\n  const getSubtotal = () => Object.entries(selectedProducts).reduce((sum, [id, qty]) => {\n    const product = products.find(p => p.id === parseInt(id));\n    return sum + ((product === null || product === void 0 ? void 0 : product.price) || 0) * qty;\n  }, 0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Sales\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Select Products\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Select\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Product\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Price (M)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Stock\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Quantity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Subtotal (M)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: products.map(product => {\n            const qty = selectedProducts[product.id] || 0;\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: !!selectedProducts[product.id],\n                  onChange: () => toggleSelection(product.id),\n                  disabled: product.quantity === 0\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: product.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"M\", product.price.toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: product.quantity\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  min: \"1\",\n                  max: product.quantity,\n                  value: qty,\n                  onChange: e => updateQuantity(product.id, parseInt(e.target.value) || 0),\n                  disabled: !selectedProducts[product.id]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: qty > 0 ? \"M\" + (product.price * qty).toFixed(2) : \"-\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 19\n              }, this)]\n            }, product.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), Object.keys(selectedProducts).length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Sale Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Product\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Price (M)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Quantity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Subtotal (M)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: Object.entries(selectedProducts).filter(([_, qty]) => qty > 0).map(([id, qty]) => {\n            const product = products.find(p => p.id === parseInt(id));\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: product.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"M\", product.price.toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: qty\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"M\", (product.price * qty).toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 23\n              }, this)]\n            }, id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 21\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tfoot\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: \"3\",\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Total\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [\"M\", getSubtotal().toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: processSale,\n        disabled: processing,\n        children: processing ? \"Processing...\" : \"Process Sale\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSelectedProducts({}),\n        disabled: processing,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};\n_s(Sales, \"4RnqaIsMZ33Y+tr3ZgVOsHRjlnQ=\");\n_c = Sales;\nexport default Sales;\nvar _c;\n$RefreshReg$(_c, \"Sales\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Sales","products","setProducts","transactions","setTransactions","_s","selectedProducts","setSelectedProducts","processing","setProcessing","toggleSelection","productId","prev","_","rest","updateQuantity","qty","isNaN","product","find","p","id","parseInt","quantity","alert","name","processSale","itemsToSell","Object","entries","filter","map","length","updatedProducts","newTransactions","item","newStock","res","fetch","method","headers","body","JSON","stringify","ok","Error","updatedProduct","json","push","transRes","type","unitPrice","price","totalAmount","date","Date","toISOString","newTransaction","updated","up","error","console","message","getSubtotal","reduce","sum","children","fileName","_jsxFileName","lineNumber","columnNumber","className","checked","onChange","disabled","toFixed","min","max","value","e","target","keys","colSpan","onClick","_c","$RefreshReg$"],"sources":["C:/Users/eipfcvbjk/OneDrive/Desktop/wings-cafe/frontend/src/components/Sales.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst Sales = ({ products, setProducts, transactions, setTransactions }) => {\r\n  const [selectedProducts, setSelectedProducts] = useState({});\r\n  const [processing, setProcessing] = useState(false);\r\n\r\n  // Toggle selection of a product\r\n  const toggleSelection = (productId) => {\r\n    setSelectedProducts((prev) => {\r\n      if (prev[productId]) {\r\n        const { [productId]: _, ...rest } = prev;\r\n        return rest;\r\n      } else {\r\n        return { ...prev, [productId]: 1 };\r\n      }\r\n    });\r\n  };\r\n\r\n  // Update quantity for a selected product\r\n  const updateQuantity = (productId, qty) => {\r\n    if (qty < 0 || isNaN(qty)) return;\r\n    const product = products.find((p) => p.id === parseInt(productId));\r\n    if (!product) return;\r\n\r\n    if (qty > product.quantity) {\r\n      alert(`Only ${product.quantity} units of ${product.name} are available.`);\r\n      return;\r\n    }\r\n\r\n    setSelectedProducts((prev) => ({ ...prev, [productId]: qty }));\r\n  };\r\n\r\n  const processSale = async () => {\r\n    if (processing) return;\r\n    \r\n    setProcessing(true);\r\n    \r\n    const itemsToSell = Object.entries(selectedProducts)\r\n      .filter(([_, qty]) => qty > 0)\r\n      .map(([id, qty]) => {\r\n        const product = products.find((p) => p.id === parseInt(id));\r\n        return { product, quantity: qty };\r\n      });\r\n\r\n    if (itemsToSell.length === 0) {\r\n      alert(\"Please select at least one product and enter a valid quantity.\");\r\n      setProcessing(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const updatedProducts = [];\r\n      const newTransactions = [];\r\n\r\n      for (const item of itemsToSell) {\r\n        const newStock = item.product.quantity - item.quantity;\r\n\r\n        // Update product\r\n        const res = await fetch(`http://localhost:3001/products/${item.product.id}`, {\r\n          method: \"PATCH\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({ quantity: newStock }),\r\n        });\r\n        \r\n        if (!res.ok) throw new Error(`Failed to update product ${item.product.name}`);\r\n        \r\n        const updatedProduct = await res.json();\r\n        updatedProducts.push(updatedProduct);\r\n\r\n        // Record transaction\r\n        const transRes = await fetch(\"http://localhost:3001/transactions\", {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({\r\n            productId: item.product.id,\r\n            type: \"sale\",\r\n            quantity: item.quantity,\r\n            unitPrice: item.product.price,\r\n            totalAmount: item.product.price * item.quantity,\r\n            date: new Date().toISOString(),\r\n          }),\r\n        });\r\n        \r\n        if (!transRes.ok) throw new Error(`Failed to create transaction for ${item.product.name}`);\r\n        \r\n        const newTransaction = await transRes.json();\r\n        newTransactions.push(newTransaction);\r\n      }\r\n\r\n      // Update state only once after all API calls are successful\r\n      setProducts((prev) =>\r\n        prev.map((p) => {\r\n          const updated = updatedProducts.find(up => up.id === p.id);\r\n          return updated ? updated : p;\r\n        })\r\n      );\r\n      \r\n      setTransactions((prev) => [...prev, ...newTransactions]);\r\n      setSelectedProducts({});\r\n      alert(\"Sale processed successfully!\");\r\n    } catch (error) {\r\n      console.error(\"Error processing sale:\", error);\r\n      alert(`Error processing sale: ${error.message}`);\r\n    } finally {\r\n      setProcessing(false);\r\n    }\r\n  };\r\n\r\n  const getSubtotal = () =>\r\n    Object.entries(selectedProducts).reduce((sum, [id, qty]) => {\r\n      const product = products.find((p) => p.id === parseInt(id));\r\n      return sum + (product?.price || 0) * qty;\r\n    }, 0);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Sales</h2>\r\n\r\n      <div className=\"card\">\r\n        <h3>Select Products</h3>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Select</th>\r\n              <th>Product</th>\r\n              <th>Price (M)</th>\r\n              <th>Stock</th>\r\n              <th>Quantity</th>\r\n              <th>Subtotal (M)</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {products.map((product) => {\r\n              const qty = selectedProducts[product.id] || 0;\r\n              return (\r\n                <tr key={product.id}>\r\n                  <td>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={!!selectedProducts[product.id]}\r\n                      onChange={() => toggleSelection(product.id)}\r\n                      disabled={product.quantity === 0}\r\n                    />\r\n                  </td>\r\n                  <td>{product.name}</td>\r\n                  <td>M{product.price.toFixed(2)}</td>\r\n                  <td>{product.quantity}</td>\r\n                  <td>\r\n                    <input\r\n                      type=\"number\"\r\n                      min=\"1\"\r\n                      max={product.quantity}\r\n                      value={qty}\r\n                      onChange={(e) =>\r\n                        updateQuantity(product.id, parseInt(e.target.value) || 0)\r\n                      }\r\n                      disabled={!selectedProducts[product.id]}\r\n                    />\r\n                  </td>\r\n                  <td>{qty > 0 ? \"M\" + (product.price * qty).toFixed(2) : \"-\"}</td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      {Object.keys(selectedProducts).length > 0 && (\r\n        <div className=\"card\">\r\n          <h3>Sale Summary</h3>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Product</th>\r\n                <th>Price (M)</th>\r\n                <th>Quantity</th>\r\n                <th>Subtotal (M)</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {Object.entries(selectedProducts)\r\n                .filter(([_, qty]) => qty > 0)\r\n                .map(([id, qty]) => {\r\n                  const product = products.find((p) => p.id === parseInt(id));\r\n                  return (\r\n                    <tr key={id}>\r\n                      <td>{product.name}</td>\r\n                      <td>M{product.price.toFixed(2)}</td>\r\n                      <td>{qty}</td>\r\n                      <td>M{(product.price * qty).toFixed(2)}</td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n            </tbody>\r\n            <tfoot>\r\n              <tr>\r\n                <td colSpan=\"3\"><strong>Total</strong></td>\r\n                <td><strong>M{getSubtotal().toFixed(2)}</strong></td>\r\n              </tr>\r\n            </tfoot>\r\n          </table>\r\n\r\n          <button onClick={processSale} disabled={processing}>\r\n            {processing ? \"Processing...\" : \"Process Sale\"}\r\n          </button>\r\n          <button onClick={() => setSelectedProducts({})} disabled={processing}>\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sales;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}