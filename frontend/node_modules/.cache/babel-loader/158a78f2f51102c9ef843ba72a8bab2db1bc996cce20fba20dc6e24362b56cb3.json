{"ast":null,"code":"import _objectSpread from\"C:/Users/eipfcvbjk/AppData/Roaming/npm/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState}from\"react\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const StockManagement=_ref=>{let{products,transactions,refreshProducts,refreshTransactions}=_ref;const[quantities,setQuantities]=useState({});// { productId: number }\nconst updateQuantity=(productId,value)=>{setQuantities(prev=>_objectSpread(_objectSpread({},prev),{},{[productId]:value}));};const handleStockAdjustment=async(product,type)=>{const qty=parseInt(quantities[product.id]||0);if(!qty||qty<=0){alert(\"Please enter a valid quantity.\");return;}let newQuantity=product.quantity;if(type===\"add\"){newQuantity+=qty;}else if(type===\"remove\"){newQuantity-=qty;if(newQuantity<0)newQuantity=0;}try{// Update product\nawait fetch(\"http://localhost:3001/products/\".concat(product.id),{method:\"PATCH\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({quantity:newQuantity})});// Record transaction\nawait fetch(\"http://localhost:3001/transactions\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({productId:product.id,type:type===\"add\"?\"add\":\"remove\",// store simplified type\nquantity:qty,date:new Date().toISOString()})});setQuantities(prev=>_objectSpread(_objectSpread({},prev),{},{[product.id]:\"\"}));refreshProducts();refreshTransactions();}catch(error){console.error(\"Error adjusting stock:\",error);alert(\"Error adjusting stock. Please try again.\");}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Stock Management\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"card\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Adjust Stock Levels\"}),/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Product\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Current Stock\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Quantity\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Actions\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:products.map(product=>{const qty=quantities[product.id]||\"\";return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:product.name}),/*#__PURE__*/_jsx(\"td\",{children:product.quantity}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"number\",min:\"0\",value:qty,onChange:e=>updateQuantity(product.id,e.target.value)})}),/*#__PURE__*/_jsxs(\"td\",{children:[/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-success\",onClick:()=>handleStockAdjustment(product,\"add\"),children:\"Add Stock\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-danger\",style:{marginLeft:\"5px\"},onClick:()=>handleStockAdjustment(product,\"remove\"),children:\"Deduct Stock\"})]})]},product.id);})})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"card\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Stock Transactions\"}),/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Date\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Product\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Type\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Quantity\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:transactions.map(transaction=>{const product=products.find(p=>p.id===transaction.productId);const typeLabel=transaction.type===\"add\"?\"Add Stock\":\"Deduct Stock\";return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:new Date(transaction.date).toLocaleDateString()}),/*#__PURE__*/_jsx(\"td\",{children:product?product.name:\"Unknown Product\"}),/*#__PURE__*/_jsx(\"td\",{children:typeLabel}),/*#__PURE__*/_jsx(\"td\",{children:transaction.quantity})]},transaction.id);})})]})]})]});};export default StockManagement;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","StockManagement","_ref","products","transactions","refreshProducts","refreshTransactions","quantities","setQuantities","updateQuantity","productId","value","prev","_objectSpread","handleStockAdjustment","product","type","qty","parseInt","id","alert","newQuantity","quantity","fetch","concat","method","headers","body","JSON","stringify","date","Date","toISOString","error","console","children","className","map","name","min","onChange","e","target","onClick","style","marginLeft","transaction","find","p","typeLabel","toLocaleDateString"],"sources":["C:/Users/eipfcvbjk/OneDrive/Desktop/wings-cafe/frontend/src/components/StockManagement.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst StockManagement = ({ products, transactions, refreshProducts, refreshTransactions }) => {\r\n  const [quantities, setQuantities] = useState({}); // { productId: number }\r\n\r\n  const updateQuantity = (productId, value) => {\r\n    setQuantities((prev) => ({\r\n      ...prev,\r\n      [productId]: value,\r\n    }));\r\n  };\r\n\r\n  const handleStockAdjustment = async (product, type) => {\r\n    const qty = parseInt(quantities[product.id] || 0);\r\n    if (!qty || qty <= 0) {\r\n      alert(\"Please enter a valid quantity.\");\r\n      return;\r\n    }\r\n\r\n    let newQuantity = product.quantity;\r\n    if (type === \"add\") {\r\n      newQuantity += qty;\r\n    } else if (type === \"remove\") {\r\n      newQuantity -= qty;\r\n      if (newQuantity < 0) newQuantity = 0;\r\n    }\r\n\r\n    try {\r\n      // Update product\r\n      await fetch(`http://localhost:3001/products/${product.id}`, {\r\n        method: \"PATCH\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ quantity: newQuantity }),\r\n      });\r\n\r\n      // Record transaction\r\n      await fetch(\"http://localhost:3001/transactions\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          productId: product.id,\r\n          type: type === \"add\" ? \"add\" : \"remove\", // store simplified type\r\n          quantity: qty,\r\n          date: new Date().toISOString(),\r\n        }),\r\n      });\r\n\r\n      setQuantities((prev) => ({ ...prev, [product.id]: \"\" }));\r\n      refreshProducts();\r\n      refreshTransactions();\r\n    } catch (error) {\r\n      console.error(\"Error adjusting stock:\", error);\r\n      alert(\"Error adjusting stock. Please try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Stock Management</h2>\r\n\r\n      <div className=\"card\">\r\n        <h3>Adjust Stock Levels</h3>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Product</th>\r\n              <th>Current Stock</th>\r\n              <th>Quantity</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {products.map((product) => {\r\n              const qty = quantities[product.id] || \"\";\r\n              return (\r\n                <tr key={product.id}>\r\n                  <td>{product.name}</td>\r\n                  <td>{product.quantity}</td>\r\n                  <td>\r\n                    <input\r\n                      type=\"number\"\r\n                      min=\"0\"\r\n                      value={qty}\r\n                      onChange={(e) =>\r\n                        updateQuantity(product.id, e.target.value)\r\n                      }\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <button\r\n                      className=\"btn btn-success\"\r\n                      onClick={() => handleStockAdjustment(product, \"add\")}\r\n                    >\r\n                      Add Stock\r\n                    </button>\r\n                    <button\r\n                      className=\"btn btn-danger\"\r\n                      style={{ marginLeft: \"5px\" }}\r\n                      onClick={() => handleStockAdjustment(product, \"remove\")}\r\n                    >\r\n                      Deduct Stock\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      <div className=\"card\">\r\n        <h3>Stock Transactions</h3>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Date</th>\r\n              <th>Product</th>\r\n              <th>Type</th>\r\n              <th>Quantity</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {transactions.map((transaction) => {\r\n              const product = products.find((p) => p.id === transaction.productId);\r\n              const typeLabel =\r\n                transaction.type === \"add\" ? \"Add Stock\" : \"Deduct Stock\";\r\n              return (\r\n                <tr key={transaction.id}>\r\n                  <td>{new Date(transaction.date).toLocaleDateString()}</td>\r\n                  <td>{product ? product.name : \"Unknown Product\"}</td>\r\n                  <td>{typeLabel}</td>\r\n                  <td>{transaction.quantity}</td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StockManagement;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}